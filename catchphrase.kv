#:kivy 1.8.0
#:import BoxLayout kivy.uix.boxlayout.BoxLayout
#:import TextInput kivy.uix.textinput.TextInput
#:import Label kivy.uix.label.Label
#:import Button kivy.uix.button.Button
#:import CoreLabel kivy.core.text.Label
<MyScreenManager>:
#    LoginScreen:
#    GameChooserScreen:
#    MakeGameScreen:
#    SelectWordsListScreen:
#    JoinGameScreen:
#    GameLobbyScreen:
#    GameScreen:
#    ManageWordListsScreen:
#    WordListViewScreen:
<JoinGameScreen>:
    game_name_input: join_game_id_input
#    name: 'join game'
    BoxLayout:
        orientation: 'vertical'
        BoxLayout
            size_hint_y: .8
            Label:
                text: 'Enter Game Name:'
            TextInput:
                id: join_game_id_input
                multiline: False
        Button:
            size_hint_y: .2
            text: 'Join Game'
            on_release: root.join()

<GameScreen>:
#    name: 'game'
    players_turn_label: display_name
    word_label: word_box
    bottom_buttons: buttons
    time_label: timer
    scores_label: score
    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            size_hint_y: .4
            Label:
                id: display_name
                text: "Current Turn: "
            Label:
                id: score
        BoxLayout:
            size_hint_y: .4
            Label:
                id: word_box
                text: "Not Your Turn"
            Label:
                id: timer
                text: ""
        BoxLayout:
            size_hint_y: .2
            id: buttons

<GameLobbyScreen>:
#    name: 'game lobby'
    view_label: player_view_label
    view_list: player_view_list
    pointing_to_spinner: player_pointing_to
    number_sharing_device_spinner: number_sharing_device_spinner_kv
    #overall layout
    BoxLayout:
        orientation: 'vertical'
        #top lists
        BoxLayout:
            #status view
            BoxLayout:
                orientation: 'vertical'
                Label:
                    id: player_view_label
                    size_hint_y: .1
                    text: "" if root.waiting_is_empty else "Waiting on:"
                ListView:
                    id: player_view_list
            #Player that I "hand" device to
            BoxLayout:
                orientation: 'vertical'
                Label:
                    size_hint_y: None
                    text: 'Player after me:'
                    height: self.parent.height * .1
                Spinner:
                    size_hint_y: None
                    height: root.SPINNER_HEIGHT
                    id: player_pointing_to
                    text: "Player After Me"
                    values: tuple()
                Label:
                    text: ""
                    size_hint_y: .5
                Label:
                    size_hint_y: None
                    height: self.parent.height * .1
                    text: "number of people sharing device"
                Spinner:
                    id: number_sharing_device_spinner_kv
                    size_hint_y: None
                    height: root.SPINNER_HEIGHT
                    text: "1"
                    values: [str(i+1) for i in range(12)]
                Label:
                    text: ""

        #bottom buttons
        Button:
            size_hint_y: .2
            text: 'Start'
            on_release: root.submit_start_game_request()


<GameChooserScreen>:
#    name: 'game chooser'
    GridLayout:
        cols: 1
        spacing: "1dp"
        orientation: 'vertical'
        Button:
            text: 'Make Game'
            on_release:
                app.root.switch_to('make game')
                app.root.current_screen.get_unique_game_id()#WAITING ISSUE?
        Button:
            text: 'Join Game'
            on_release: app.root.switch_to('join game')
        Button:
            text: 'Manage Word Lists'
            on_release: app.root.switch_to('manage word lists')

<ManageWordListsScreen>
    list_label: list_label_kv
    new_list_okay: new_list_okay_kv.__self__
    new_list_not_okay: new_list_not_okay_kv.__self__
    scroll_view: scroll_view_kv
    new_list_box: new_list_kv
#    name: 'manage word lists'
    BoxLayout:
        #Note. The layout is not as defined below
        #I used kv-lang to make buttons so I woudn't
        #have to bind everything, then use their id's
        #and place them appropriatley in my python class
        orientation: 'vertical'
        Label:
            id: list_label_kv
            size_hint_y: .1
            text_size: self.text_size[0], self.size[1]
            text: 'Lists:'
#        Button:
#            size_hint_y: .05
#            text: "help"
#            on_release:
#                root.help()
        ScrollView:
            size_hint_y: .7
            id: scroll_view_kv

        BoxLayout:
            size_hint_y: .2
            id: new_list_kv
            Button:
                id: new_list_okay_kv
                text: "Make New List"
                on_release: app.root.switch_to("make word list")
            PremiumLabel:
                id: new_list_not_okay_kv
                canvas.after:
                    Color:
                        rgba: (1,1,1,.5)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                text: "Make New List"

<WordListViewerScreen>:
    #name: 'word list viewer'
    words_list_view: words_list_view_kv
    BoxLayout:
        orientation: "vertical"
        ListView:
            size_hint_y: 1
            id: words_list_view_kv

<MakeWordListScreen>:
#    name: 'make word list'
    BoxLayout:
        orientation: 'vertical'
        TextInput:
            id: name_text_input
            multiline: False
            text: ""
            hint_text: 'name of list'
        BoxLayout:
            TextInput:
                size_hint_x: .4
                text: ""
                id: url_text_input
                multiline: False
                hint_text: 'Enter Url'
            Label:
                size_hint_x: .1
                text: 'or'
            Button:
                size_hint_x: .4
                text: "make list locally"
                on_release: root.make_list_locally(name_text_input.text, [])

        Button:
            text: 'submit'
            on_press: app.loading_popup()
            on_release: root.add_word_list(name_text_input.text,url_text_input.text)#blocking call,causes

<MakeGameScreen>:
#    name: 'make game'
    unique_game_id: make_game_id_input

    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            size_hint_y: .4
            orientation: 'horizontal'
            Label:
                text: 'Game ID'
            TextInput:
                id: make_game_id_input
                multiline: False
                text: "Getting Unique Game ID"
        BoxLayout:
            size_hint_y: .4
            orientation: 'horizontal'
            Label:
                text: 'Selected Word List: ' + root.word_list_name
            Button:
                on_release: root.server_list()
                text: 'Server Word List'
            Button:
                text: 'My Word List'
                on_release: root.local_list()
        Button:
            size_hint_y: .2
            text: 'Make Game'
            on_release: root.make_and_join_game()

<WordListEditor>:
    scroll_view: scroll_view_kv
    #save_name_input: save_name_input_kv
    new_word_input: new_word_input_kv
    BoxLayout:
        orientation: 'vertical'
        ScrollView:
            size_hint_y: .6
            id: scroll_view_kv
        BoxLayout:
            size_hint_y: .1
            TextInput:
                id: new_word_input_kv
                size_hint_x: .8
                hint_text: "add word"
                text: ""
            Button:
                size_hint_x: .2
                text: "submit"
                on_release: root.add_word(new_word_input_kv.text)
#        BoxLayout:
#            #TODO make input popup
#            size_hint_y: .1
#            Label:
#                text:"save name:"
#                size_hint_x: None
#                width: self.texture_size[0]
#            TextInput:
#                id: save_name_input_kv
#                text: ""
        Button:
            size_hint_y: .2
            text: 'Save'
            on_release: root.save()

<MiddleTextInput@TextInput>:
    #padding: [self.width/2 - CoreLabel(self.text).size, self.padding[1]]
    on_text:
        my_label = CoreLabel()
        my_label.text = self.text
        my_label.refresh()
        self.padding = [self.width/2 - my_label.size[0], self.padding[1]]


<LoginScreen>:
#    name: 'login'
    BoxLayout:
        orientation: "vertical"
        Label:
            text:"LOGO"
        MiddleTextInput:
            id: login_text_input
            hint_text: "nickname"
            size_hint_y: None
            height: "32dp"
            on_text_validate: root.login(self.text)# reminant of password

        Label:
            text: ""
            size_hint_y: None
            height: "10dp"

        Button:
            text: "login"
            height: "48dp"
            size_hint: None,None
            width: self.parent.width * .5
            on_release: root.login(login_text_input.text)
            pos: [(self.parent.size[0] - self.size[0]) / 2, self.pos[1]]

        Label:
            text: "filler3"

        BoxLayout:
            orientation: "horizontal"
            Button:
                text: "About"
            Button:
                text: "upgrade"

#        orientation: 'vertical'
#        BoxLayout:
#            size_hint_y: .4
#            # height: self.parent.height * .4
#            orientation: 'horizontal'
#            Label:
#                text: 'Nickname:'
#            TextInput:
#                id: username_input
#                text: 'default'
#                multiline: False
#                on_text_validate: root.login(self.text, "")
#
#        BoxLayout:
#            size_hint_y: .4
#            #height: self.parent.height * .4
#            orientation: 'horizontal'
#            Label:
#                text: 'Optional Password:'
#            TextInput:
#                id: password_input
#                multiline: False
#                password: True
#
#        Button:
#            size_hint_y: .2
#            #height: self.parent.height * .2
#            on_release: root.login(username_input.text, password_input.text)
#            text: 'login:'




